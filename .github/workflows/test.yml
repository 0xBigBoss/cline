name: Tests

on:
    workflow_dispatch:
    pull_request:
        branches:
            - main
    workflow_call:

# Set default permissions for all jobs
permissions:
    contents: read # Needed to check out code
    checks: write # Needed to report test results
    pull-requests: write # Needed to add comments/annotations to PRs

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js environment
              uses: actions/setup-node@v4
              with:
                  node-version: 20.15.1

            # Cache root dependencies - only reuse if package-lock.json exactly matches
            - name: Cache root dependencies
              uses: actions/cache@v4
              id: root-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}

            # Cache webview-ui dependencies - only reuse if package-lock.json exactly matches
            - name: Cache webview-ui dependencies
              uses: actions/cache@v4
              id: webview-cache
              with:
                  path: webview-ui/node_modules
                  key: ${{ runner.os }}-npm-webview-${{ hashFiles('webview-ui/package-lock.json') }}

            - name: Install root dependencies
              if: steps.root-cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Install webview-ui dependencies
              if: steps.webview-cache.outputs.cache-hit != 'true'
              run: cd webview-ui && npm ci

            - name: Type Check
              run: npm run check-types

            - name: ESLint Check
              run: npm run lint

            - name: Prettier / Format Check
              run: npm run format

            # Run extension tests with coverage
            - name: Extension Tests with Coverage
              id: extension_coverage
              run: |
                  xvfb-run -a npm run test:coverage > extension_coverage.txt 2>&1
                  COVERAGE_PCT=$(cat extension_coverage.txt | grep "Lines" | grep -o "[0-9.]*%" | sed 's/%//' || echo "0")
                  echo "extension_coverage=$COVERAGE_PCT" >> $GITHUB_OUTPUT
                  echo "Extension coverage: $COVERAGE_PCT%"

            # Run webview tests with coverage
            - name: Webview Tests with Coverage
              id: webview_coverage
              run: |
                  cd webview-ui
                  npm run test:coverage > webview_coverage.txt 2>&1
                  COVERAGE_PCT=$(cat webview_coverage.txt | grep -A 5 "% Coverage report" | grep "All files" | awk '{print $4}' || echo "0")
                  echo "webview_coverage=$COVERAGE_PCT" >> $GITHUB_OUTPUT
                  echo "Webview coverage: $COVERAGE_PCT%"

            # Save coverage reports as artifacts (workflow-scoped)
            - name: Save Coverage Reports
              uses: actions/upload-artifact@v4
              with:
                  name: pr-coverage-reports
                  path: |
                      extension_coverage.txt
                      webview-ui/webview_coverage.txt
                  retention-period: workflow # Artifacts are automatically deleted when the workflow completes

    coverage:
        needs: test
        runs-on: ubuntu-latest
        # Only run on PRs to main branch
        if: github.event_name == 'pull_request' && github.base_ref == 'main'
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Fetch all history for accurate comparison

            - name: Setup Node.js environment
              uses: actions/setup-node@v4
              with:
                  node-version: 20.15.1

            # Cache root dependencies - only reuse if package-lock.json exactly matches
            - name: Cache root dependencies
              uses: actions/cache@v4
              id: root-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}

            # Cache webview-ui dependencies - only reuse if package-lock.json exactly matches
            - name: Cache webview-ui dependencies
              uses: actions/cache@v4
              id: webview-cache
              with:
                  path: webview-ui/node_modules
                  key: ${{ runner.os }}-npm-webview-${{ hashFiles('webview-ui/package-lock.json') }}

            - name: Install root dependencies
              if: steps.root-cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Install webview-ui dependencies
              if: steps.webview-cache.outputs.cache-hit != 'true'
              run: cd webview-ui && npm ci

            # Download PR coverage reports
            - name: Download PR Coverage Reports
              uses: actions/download-artifact@v4
              with:
                  name: pr-coverage-reports

            # Extract PR coverage percentages
            - name: Extract PR Coverage Percentages
              id: pr_coverage
              run: |
                  PR_EXT_COV=$(cat extension_coverage.txt | grep "Lines" | grep -o "[0-9.]*%" | sed 's/%//' || echo "0")
                  PR_WEB_COV=$(cat webview-ui/webview_coverage.txt | grep -A 5 "% Coverage report" | grep "All files" | awk '{print $4}' || echo "0")
                  echo "pr_extension_coverage=$PR_EXT_COV" >> $GITHUB_OUTPUT
                  echo "pr_webview_coverage=$PR_WEB_COV" >> $GITHUB_OUTPUT
                  echo "PR extension coverage: $PR_EXT_COV%"
                  echo "PR webview coverage: $PR_WEB_COV%"

            # Get base branch coverage
            - name: Checkout base branch
              run: |
                  git fetch origin ${{ github.base_ref }}
                  git checkout ${{ github.base_ref }}

            - name: Run extension coverage on base branch
              id: base_extension_coverage
              continue-on-error: true
              run: |
                  # Run coverage and extract percentage
                  npm run test:coverage > base_extension_coverage.txt 2>&1
                  COVERAGE_PCT=$(cat base_extension_coverage.txt | grep "Lines" | grep -o "[0-9.]*%" | sed 's/%//' || echo "0")
                  echo "base_extension_coverage=$COVERAGE_PCT" >> $GITHUB_OUTPUT
                  echo "Base extension coverage: $COVERAGE_PCT%"

            - name: Run webview coverage on base branch
              id: base_webview_coverage
              continue-on-error: true
              run: |
                  # Run coverage and extract percentage
                  cd webview-ui
                  npm run test:coverage > base_webview_coverage.txt 2>&1
                  COVERAGE_PCT=$(cat base_webview_coverage.txt | grep -A 5 "% Coverage report" | grep "All files" | awk '{print $4}' || echo "0")
                  echo "base_webview_coverage=$COVERAGE_PCT" >> $GITHUB_OUTPUT
                  echo "Base webview coverage: $COVERAGE_PCT%"

            # Compare coverage
            - name: Compare extension coverage
              id: compare_extension_coverage
              run: |
                  BASE_COV="${{ steps.base_extension_coverage.outputs.base_extension_coverage }}"
                  PR_COV="${{ steps.pr_coverage.outputs.pr_extension_coverage }}"

                  if [[ -z "$BASE_COV" || -z "$PR_COV" ]]; then
                    echo "Could not determine extension coverage percentages"
                    echo "extension_decreased=false" >> $GITHUB_OUTPUT
                    echo "extension_diff=0" >> $GITHUB_OUTPUT
                  else
                    DIFF=$(echo "$PR_COV - $BASE_COV" | bc 2>/dev/null || echo "0")
                    echo "Extension coverage difference: $DIFF%"
                    
                    if (( $(echo "$DIFF < 0" | bc -l 2>/dev/null || echo "0") )); then
                      echo "extension_decreased=true" >> $GITHUB_OUTPUT
                      echo "extension_diff=${DIFF#-}" >> $GITHUB_OUTPUT  # Remove minus sign
                    else
                      echo "extension_decreased=false" >> $GITHUB_OUTPUT
                      echo "extension_diff=$DIFF" >> $GITHUB_OUTPUT
                    fi
                  fi

            - name: Compare webview coverage
              id: compare_webview_coverage
              run: |
                  BASE_COV="${{ steps.base_webview_coverage.outputs.base_webview_coverage }}"
                  PR_COV="${{ steps.pr_coverage.outputs.pr_webview_coverage }}"

                  if [[ -z "$BASE_COV" || -z "$PR_COV" ]]; then
                    echo "Could not determine webview coverage percentages"
                    echo "webview_decreased=false" >> $GITHUB_OUTPUT
                    echo "webview_diff=0" >> $GITHUB_OUTPUT
                  else
                    DIFF=$(echo "$PR_COV - $BASE_COV" | bc 2>/dev/null || echo "0")
                    echo "Webview coverage difference: $DIFF%"
                    
                    if (( $(echo "$DIFF < 0" | bc -l 2>/dev/null || echo "0") )); then
                      echo "webview_decreased=true" >> $GITHUB_OUTPUT
                      echo "webview_diff=${DIFF#-}" >> $GITHUB_OUTPUT  # Remove minus sign
                    else
                      echo "webview_decreased=false" >> $GITHUB_OUTPUT
                      echo "webview_diff=$DIFF" >> $GITHUB_OUTPUT
                    fi
                  fi

            - name: Comment PR with coverage comparison
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const extensionDecreased = '${{ steps.compare_extension_coverage.outputs.extension_decreased }}' === 'true';
                      const extensionDiff = parseFloat('${{ steps.compare_extension_coverage.outputs.extension_diff }}' || '0');
                      const baseExtensionCov = parseFloat('${{ steps.base_extension_coverage.outputs.base_extension_coverage }}' || '0');
                      const prExtensionCov = parseFloat('${{ steps.pr_coverage.outputs.pr_extension_coverage }}' || '0');

                      const webviewDecreased = '${{ steps.compare_webview_coverage.outputs.webview_decreased }}' === 'true';
                      const webviewDiff = parseFloat('${{ steps.compare_webview_coverage.outputs.webview_diff }}' || '0');
                      const baseWebviewCov = parseFloat('${{ steps.base_webview_coverage.outputs.base_webview_coverage }}' || '0');
                      const prWebviewCov = parseFloat('${{ steps.pr_coverage.outputs.pr_webview_coverage }}' || '0');

                      let comment = '## Coverage Report\n\n';

                      // Extension coverage
                      comment += '### Extension Coverage\n\n';
                      comment += `Base branch: ${baseExtensionCov}%\n\n`;
                      comment += `PR branch: ${prExtensionCov}%\n\n`;

                      if (extensionDecreased) {
                        comment += `⚠️ **Warning: Coverage decreased by ${extensionDiff.toFixed(2)}%**\n\n`;
                        comment += 'Consider adding tests to cover your changes.\n\n';
                      } else {
                        comment += '✅ Coverage increased or remained the same\n\n';
                      }

                      // Webview coverage
                      comment += '### Webview Coverage\n\n';
                      comment += `Base branch: ${baseWebviewCov}%\n\n`;
                      comment += `PR branch: ${prWebviewCov}%\n\n`;

                      if (webviewDecreased) {
                        comment += `⚠️ **Warning: Coverage decreased by ${webviewDiff.toFixed(2)}%**\n\n`;
                        comment += 'Consider adding tests to cover your changes.\n\n';
                      } else {
                        comment += '✅ Coverage increased or remained the same\n\n';
                      }

                      // Overall assessment
                      comment += '### Overall Assessment\n\n';
                      if (extensionDecreased || webviewDecreased) {
                        comment += '⚠️ **Test coverage has decreased in this PR**\n\n';
                        comment += 'Please consider adding tests to maintain or improve coverage.\n\n';
                      } else {
                        comment += '✅ **Test coverage has been maintained or improved**\n\n';
                      }

                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: comment
                      });
