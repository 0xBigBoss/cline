name: Tests

on:
    workflow_dispatch:
    pull_request:
        branches:
            - main
    workflow_call:

# Set default permissions for all jobs
permissions:
    contents: read # Needed to check out code
    checks: write # Needed to report test results
    pull-requests: write # Needed to add comments/annotations to PRs

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js environment
              uses: actions/setup-node@v4
              with:
                  node-version: 20.15.1

            # Cache root dependencies - only reuse if package-lock.json exactly matches
            - name: Cache root dependencies
              uses: actions/cache@v4
              id: root-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}

            # Cache webview-ui dependencies - only reuse if package-lock.json exactly matches
            - name: Cache webview-ui dependencies
              uses: actions/cache@v4
              id: webview-cache
              with:
                  path: webview-ui/node_modules
                  key: ${{ runner.os }}-npm-webview-${{ hashFiles('webview-ui/package-lock.json') }}

            - name: Install root dependencies
              if: steps.root-cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Install webview-ui dependencies
              if: steps.webview-cache.outputs.cache-hit != 'true'
              run: cd webview-ui && npm ci

            - name: Type Check
              run: npm run check-types

            - name: ESLint Check
              run: npm run lint

            - name: Prettier / Format Check
              run: npm run format

            - name: Extension Tests
              run: xvfb-run -a npm run test

    complexity-check:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js environment
              uses: actions/setup-node@v4
              with:
                  node-version: 20.15.1

            - name: Install dependencies
              run: npm ci

            - name: Analyze Base Branch
              id: base-analysis
              run: |
                  git fetch origin ${{ github.base_ref }}
                  git checkout origin/${{ github.base_ref }}

                  # Run ESLint complexity check
                  npm run lint:complexity
                  BASE_VIOLATIONS=$(jq '.length' complexity-report.json || echo "0")
                  echo "base_violations=$BASE_VIOLATIONS" >> $GITHUB_OUTPUT

                  # Run maintainability analysis
                  npm run analyze:maintainability
                  BASE_MI=$(jq '.summary.averageMaintainabilityIndex' maintainability-report.json || echo "0")
                  echo "base_mi=$BASE_MI" >> $GITHUB_OUTPUT

            - name: Analyze PR Branch
              id: pr-analysis
              run: |
                  git checkout ${{ github.head_ref }}

                  # Run ESLint complexity check
                  npm run lint:complexity
                  PR_VIOLATIONS=$(jq '.length' complexity-report.json || echo "0")
                  echo "pr_violations=$PR_VIOLATIONS" >> $GITHUB_OUTPUT

                  # Run maintainability analysis
                  npm run analyze:maintainability
                  PR_MI=$(jq '.summary.averageMaintainabilityIndex' maintainability-report.json || echo "0")
                  echo "pr_mi=$PR_MI" >> $GITHUB_OUTPUT

            - name: Generate Complexity Report
              run: |
                  # Extract cognitive complexity violations
                  PR_COG_VIOLATIONS=$(jq '[.messages[] | select(.ruleId == "sonarjs/cognitive-complexity")] | length' complexity-report.json || echo "0")
                  BASE_COG_VIOLATIONS=$(git checkout origin/${{ github.base_ref }} && npm run lint:complexity -s && jq '[.messages[] | select(.ruleId == "sonarjs/cognitive-complexity")] | length' complexity-report.json || echo "0")

                  # Create detailed report
                  echo "### Code Complexity Analysis Report" > complexity-report.md
                  echo "" >> complexity-report.md
                  echo "| Metric | Base Branch | PR Branch | Status |" >> complexity-report.md
                  echo "|--------|-------------|-----------|---------|" >> complexity-report.md

                  # Add ESLint complexity violations
                  STATUS_ESLINT="✅"
                  if [ "${{ steps.pr-analysis.outputs.pr_violations }}" -gt "${{ steps.base-analysis.outputs.base_violations }}" ]; then
                      STATUS_ESLINT="⚠️"
                  fi
                  echo "| ESLint Complexity Violations | ${{ steps.base-analysis.outputs.base_violations }} | ${{ steps.pr-analysis.outputs.pr_violations }} | $STATUS_ESLINT |" >> complexity-report.md

                  # Add cognitive complexity violations
                  STATUS_COG="✅"
                  if [ "$PR_COG_VIOLATIONS" -gt "$BASE_COG_VIOLATIONS" ]; then
                      STATUS_COG="⚠️"
                  fi
                  echo "| Cognitive Complexity Violations | $BASE_COG_VIOLATIONS | $PR_COG_VIOLATIONS | $STATUS_COG |" >> complexity-report.md

                  # Add maintainability index
                  STATUS_MI="✅"
                  if (( $(echo "${{ steps.pr-analysis.outputs.pr_mi }} < ${{ steps.base-analysis.outputs.base_mi }}" | bc -l) )); then
                      STATUS_MI="⚠️"
                  fi
                  echo "| Maintainability Index | ${{ steps.base-analysis.outputs.base_mi }} | ${{ steps.pr-analysis.outputs.pr_mi }} | $STATUS_MI |" >> complexity-report.md

                  # Add explanation
                  echo "" >> complexity-report.md
                  echo "#### Legend" >> complexity-report.md
                  echo "- ✅ No significant increase in complexity" >> complexity-report.md
                  echo "- ⚠️ Complexity has increased" >> complexity-report.md

                  # Add PR comment with the report
                  gh pr comment ${{ github.event.pull_request.number }} --body-file complexity-report.md
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Check Complexity Thresholds
              if: |
                  ${{ steps.pr-analysis.outputs.pr_violations > steps.base-analysis.outputs.base_violations ||
                      steps.pr-analysis.outputs.pr_mi < steps.base-analysis.outputs.base_mi }}
              run: |
                  echo "::warning::Code complexity metrics have degraded in this PR"
                  echo "Please review the complexity report in the PR comments"
